
.btn{
    &:link,
    &:visited{
        text-decoration: none;
        text-transform: uppercase;
        padding:1.5rem 4rem;
        display: inline-block; /*Displays an element as an inline-level block container. The element itself is formatted as an inline element, but you can apply height and width values*/
        border-radius: 10rem;
        transition: all .2s; /* allows you to change property values smoothly (from one value to another), over a given duration. */
        /* there is a lot of properties between class btn, there are transform and box shadow so better used transition  */
        position: relative; /*parent position*/
        font-size: 1.6rem;
    }
    
    &:hover{
        transform: translateY(-.3rem);
        box-shadow: 0 1rem 2rem rgba($color-black, .2);

        &::after{
            transform: scaleX(1.4) scaleY(1.6);
            opacity: 0;
        }
    }
    
    &:active{
        transform: translateY(-.1rem);
        box-shadow: 0 .5rem 1rem rgba($color-black, .2);
    }
    &--white{
        color: $color-grey-dark;
        background-color: $color-white;

        &::after{
            background-color: whitesmoke;
        }
    }
    
    &::after{
        content: "";
        display: inline-block;
        height: 100%;
        width: 100%;
        border-radius: 10rem;
        position: absolute; /*key of z-index*/
        top: 0;
        left: 0;
        z-index: -1;/*An element with greater stack order is always in front of an element with a lower stack order.*/
        /*Note: z-index only works on positioned elements (position:absolute, position:relative, or position:fixed).*/
        transition: all .4s;
    }

    &--animated {
        animation: buttonMoveIn .6s ease-out .75s;
        animation-fill-mode: backwards;
    }
}