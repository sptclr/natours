/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* 
    use position properties to moved element;
    use text-align properties to moved some text;
*/

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body{
    font-family: "lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;
    padding: 30px;
}

.header{
    height: 95vh;/*vh : 1% of viewport*/
    background-image: 
        linear-gradient(to right bottom,rgba(126, 213, 111, 0.8), rgba(39, 179, 133, 0.8)),
        url(../img/hero.jpg);
    background-size: cover; /*fulfill the image like cover*/
    background-position: top; /*cause position img fixed at top*/
    position: relative;

    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%)
}

.logo-box{
    position: absolute; /*is positioned relative to the nearest positioned ancestor (instead of positioned relative to the viewport, like fixed).*/
    top: 40px;
    left: 40px;
}

.logo{
    height: 35px;
}

.heading-primary{
    color: #fff;
    text-transform: uppercase;
    margin-bottom: 60px;
    backface-visibility: hidden;
}

.text-box{
    position: absolute; /*to move & reach position from parent element*/
    top: 40%;
    left: 50%;
    text-align: center;
    transform: translate(-50%, -50%); /*from current position to moving element based on parent element */
}

.heading-primary-main{
    display: block; /*cause we need the other element goes down, text by default is inline or capture all spaces*/
    letter-spacing: 35px;
    font-weight: 400;
    font-size: 60px;
    
    animation-name: mainLeftIn;
    animation-timing-function: ease-out;
    animation-duration: 2s;
}

.heading-primary-sub{
    display: block;
    letter-spacing: 15px;
    font-weight: 700;
    font-size: 20px;

    animation: subRightIn ease-out 2s;
}

@keyframes mainLeftIn {
    0%{
        opacity: 0;
        transform: translateX(-100px)
    }
    80%{
        transform: translateX(20px)
    }
    100%{
        opacity: 1;
        transform: translate(0)
    }
}

@keyframes subRightIn{
    0%{
        opacity: 1;
        transform: translateX(100px);
    }

    80%{
        transform: translateX(-20px);
    }

    100%{
        opacity: 0;
        transform: translate(0);
    }
}

@keyframes buttonMoveIn{
    0%{
        opacity: 0;
        transform: translateY(30px);
    }

    100%{
        opacity: 1;
        transform: translate(0);
    }
}

.btn:link,
.btn:visited{
    text-decoration: none;
    text-transform: uppercase;
    padding:15px 40px;
    display: inline-block; /*Displays an element as an inline-level block container. The element itself is formatted as an inline element, but you can apply height and width values*/
    border-radius: 100px;
    transition: all .2s; /* allows you to change property values smoothly (from one value to another), over a given duration. */
    /* there is a lot of properties between class btn, there are transform and box shadow so better used transition  */
    position: relative; /*parent position*/
}

.btn:hover{
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, .2);
}

.btn:active{
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgba(0, 0, 0, .2);
}

.btn-white{
    color: #777;
    background-color: #fff;
}

.btn::after{
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position: absolute; /*key of z-index*/
    top: 0;
    left: 0;
    z-index: -1;/*An element with greater stack order is always in front of an element with a lower stack order.*/
    /*Note: z-index only works on positioned elements (position:absolute, position:relative, or position:fixed).*/
    transition: all .4s;
}

.btn-white::after{
    background-color: whitesmoke;
}

.btn:hover::after{
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

.btn-animated {
    animation: buttonMoveIn .6s ease-out .75s;
    animation-fill-mode: backwards;
}
